#include<bits.stdc++.h>

using namespace std;

const int N = 1e5f + 10;
bool vis[N];                    
vector<int> adj[N];              

vector<int> dist(N, -1); 

void bfs(int vert)
{
    queue<int> q;   
    q.push(vert);
    vis[vert] = 1;
    dist[vert] = 0;

    while (!q.empty())
    {
        int crt_node = q.front();
        q.pop();
        
        for (int child : adj[vert])
        {
            if (!vis[child])
            {
                q.push(child);
                vis[child] = true;
                dist[child] = dist[crt_node] + 1;
            }
        }
    }
}

int main(int argc, char const *argv[])
{
    int v, e;
    cin >> v >> e;
    for (int i = 0; i < e; i++)
    {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }

  
    bfs(0);

    for (int i = 0; i < v; i++)
    {
        cout << "Node " << i << " has dist " << dist[i] << "\n";
    }
    return 0;
}
